[{"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\index.js":"1","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\App.js":"2","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\context\\context.js":"3","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\styles.js":"4","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\context\\contextReducer.js":"5","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Details\\Details.jsx":"6","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\Main.jsx":"7","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\useTransactions.js":"8","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Details\\styles.js":"9","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\styles.js":"10","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\Form\\Form.jsx":"11","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\List\\List.jsx":"12","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\Constants\\categories.js":"13","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\List\\styles.js":"14","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\utils\\formatDate.js":"15","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\Form\\styles.js":"16"},{"size":395,"mtime":1641653527331,"results":"17","hashOfConfig":"18"},{"size":1000,"mtime":1644219624981,"results":"19","hashOfConfig":"18"},{"size":994,"mtime":1641661015700,"results":"20","hashOfConfig":"18"},{"size":582,"mtime":1644219835494,"results":"21","hashOfConfig":"18"},{"size":583,"mtime":1641659862458,"results":"22","hashOfConfig":"18"},{"size":713,"mtime":1641148115501,"results":"23","hashOfConfig":"18"},{"size":1292,"mtime":1643554857814,"results":"24","hashOfConfig":"18"},{"size":1122,"mtime":1641147235964,"results":"25","hashOfConfig":"18"},{"size":328,"mtime":1643553447989,"results":"26","hashOfConfig":"18"},{"size":584,"mtime":1643554800124,"results":"27","hashOfConfig":"18"},{"size":4746,"mtime":1641659245607,"results":"28","hashOfConfig":"18"},{"size":1603,"mtime":1641142137307,"results":"29","hashOfConfig":"18"},{"size":1691,"mtime":1641144163111,"results":"30","hashOfConfig":"18"},{"size":414,"mtime":1643554698760,"results":"31","hashOfConfig":"18"},{"size":319,"mtime":1641145419811,"results":"32","hashOfConfig":"18"},{"size":307,"mtime":1643554068325,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"es8d0d",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\index.js",[],["69","70"],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\App.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\context\\context.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\styles.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\context\\contextReducer.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\useTransactions.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Details\\styles.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\styles.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\Form\\Form.jsx",["71"],"import { useSpeechContext } from '@speechly/react-client';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { incomeCategories, expenseCategories } from '../../../Constants/categories';\r\nimport formatDate from '../../../utils/formatDate';\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date:formatDate(new Date()),\r\n  };\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState(initialState);\r\n    const {segment} = useSpeechContext();\r\n    \r\n    const {addTransaction} = useContext(ExpenseTrackerContext);\r\n    const createTransaction = () =>{\r\n        if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n        const transaction = {...formData, amount: Number(formData.amount), id:uuidv4() }\r\n        addTransaction(transaction);\r\n        setFormData(initialState);\r\n\r\n    }\r\n\r\n   \r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n    \r\n\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                    { segment ? (\r\n                        <>\r\n                        {segment.words.map((w)=> w.value).join(\" \")}\r\n                        </>\r\n                    ):null\r\n\r\n                    }\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}> \r\n            <FormControl fullWidth>\r\n                <InputLabel>Type</InputLabel>\r\n                <Select value={formData.type} onChange={(e)=>setFormData({...formData, type: e.target.value})}>\r\n                    <MenuItem value=\"Income\">Income</MenuItem>\r\n                    <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select value={formData.category} onChange={(e) => setFormData({...formData, category: e.target.value})}> \r\n                        {selectedCategories.map((c)=> <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                        \r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e)=> setFormData({...formData, amount: e.target.value})} fullWidth/>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n            <Button className={classes.button} variant='outlined' color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\Constants\\categories.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\utils\\formatDate.js",["72"],"export default (date) => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year = d.getFullYear();\r\n  \r\n    if (month.length < 2) { month = `0${month}`; }\r\n    if (day.length < 2) { day = `0${day}`; }\r\n  \r\n    return [year, month, day].join('-');\r\n  };","C:\\Users\\joeljo\\Desktop\\TY-project\\react\\expense\\src\\components\\Main\\Form\\styles.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":70,"column":6,"nodeType":"79","endLine":70,"endColumn":15,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":11,"endColumn":5},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["86"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"89","text":"90"},[2666,2675],"[createTransaction, formData, segment]"]